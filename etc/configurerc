#
# configure setup for ACE&TAO
#

configure :acetao do

  # This is also a trigger for configuring ace/config.h
  # (and include/makeinclude/platform_macros.GNU
  #  for GNU make platforms).
  # Prebuilt installations should not provide this file
  # so reconfiguration of ACE & TAO is skipped and other
  # configuration files will only be updated, not rewritten.

  dependencies do

    optional :crossbuild do
      environment :targetsysroot do
        name 'SDKTARGETSYSROOT'
        description 'Target sysroot folder (required for cross builds)'
      end
      environment :crosscompile_prefix do
        name 'CROSS_COMPILE'
        description 'Prefix for crosscompiler binaries'
      end
      environment :x11_host_root do
        name 'X11_HOST_ROOT'
        description 'AXCIOMA host buildroot (optional for cross builds)'
        default '${X11_BASE_ROOT}/HOST'
      end
      environment :ace_host_root do
        name 'HOST_ROOT'
        description 'ACE host buildroot (optional for cross builds)'
        default '${X11_HOST_ROOT}/ACE/ACE'
      end
      requires :targetsysroot
      exist '${SDKTARGETSYSROOT}'
      executable '${CROSS_COMPILE}gcc'
    end

    optional :ssl do
      environment :sslroot do
        name 'SSL_ROOT'
        description 'SSL root folder'
        default :libroot
      end
      file '${SSL_ROOT}/include/openssl/ssl.h'
      library_path '${SSL_ROOT}/${:DLL_DIR}'
    end

    optional :bzip2 do
      environment :bzip2root do
        name 'BZIP2_ROOT'
        description 'BZip2 root folder'
        default :libroot
      end
      file '${BZIP2_ROOT}/include/bzlib.h'
      library_path '${BZIP2_ROOT}/${:DLL_DIR}'
    end

    optional :zlib do
      environment :zlibroot do
        name 'ZLIB_ROOT'
        description 'Zlib root folder'
        default :libroot
      end
      file '${ZLIB_ROOT}/include/zlib.h'
      library_path '${ZLIB_ROOT}/${:DLL_DIR}'
    end

    optional :valgrind do
      environment :testdelay do
        name 'ACE_RUNTEST_DELAY'
        description 'Delay multiplication factor for ACE test framework'
      end
      environment :valgrindcmd do
        name 'ACE_RUN_VALGRIND_CMD'
        description 'Executable name to be used for valgrind (required for valgrind integration)'
      end
      environment :valgrindopts do
        name 'VALGRIND_OPTS'
        description 'Optional arguments used by valgrind'
      end
      requires :valgrindcmd
    end

    optional :valgrind_keep_debuginfo do
      environment :valgrindcmd do
        name 'ACE_RUN_VALGRIND_CMD'
        description 'Executable name to be used for valgrind (required for valgrind integration)'
      end
      evaluate(:valgrind) do
        valgrind_ver_ = `#{getenv('ACE_RUN_VALGRIND_CMD')} --version`.chomp.split("\n").first.split('valgrind-').last
        valgrind_ver_ >= '3.14.0'
      end
      requires :valgrindcmd
    end
  end

  features do
    enable 'c++17'
    enable :cross do
      depends_on :crossbuild
    end
  end

  mpc do
    include %w{$MPC_ROOT/config $ACE_ROOT/bin/MakeProjectCreator/config}
    dynamic_type %w{$MPC_ROOT $TAO_ROOT/MPC $ACE_ROOT/bin/MakeProjectCreator}

    mwc_include %w{
      $(ACE_ROOT)/ace
      $(ACE_ROOT)/apps/gperf/src
      $(TAO_ROOT)/TAO_IDL
      $(TAO_ROOT)/tao
      $(TAO_ROOT)/orbsvcs/orbsvcs/CosNaming.mpc
      $(TAO_ROOT)/orbsvcs/orbsvcs/CosNaming_Serv.mpc
      $(TAO_ROOT)/orbsvcs/orbsvcs/CosNaming_Skel.mpc
      $(TAO_ROOT)/orbsvcs/Naming_Service
      $(TAO_ROOT)/orbsvcs/orbsvcs/Svc_Utils.mpc
      $(TAO_ROOT)/orbsvcs/tests/Simple_Naming
      $(TAO_ROOT)/utils/catior/catior.mpc
    }
    mwc_include :dancex11 => '$(ACE_ROOT)/protocols/ace/INet'
  end

end
